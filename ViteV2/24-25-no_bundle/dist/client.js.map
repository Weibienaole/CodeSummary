{"version":3,"sources":["../src/client/client.ts"],"sourcesContent":["interface Update {\n  type: 'js-update' | 'css-update'\n  path: string\n  acceptedPath: string\n  timestamp: number\n}\n\nconsole.log('[m-vite] is connecting...')\n\n// 1.创建websocket实例\nconst socket = new WebSocket(`ws://localhost:__HMR_PORT__`, 'vite-hmr')\n\n// 2. 接受服务端消息\nsocket.addEventListener('message', async ({ data }) => {\n  handleMessage(JSON.parse(data as any))\n})\n\n// 处理消息\nfunction handleMessage(payload: any) {\n  switch (payload.type) {\n    case 'connected':\n      console.log('[m-vite] connected.')\n      setInterval(() => socket.send('ping'), 1000)\n\n      break\n    case 'update':\n      payload.updates.forEach((update: Update) => {\n        if (update.type === 'js-update') {\n          fetchModuleData(update)\n        }\n      })\n      break\n  }\n}\n\ninterface HotModule {\n  id: string\n  callbacks: HotCallBack[]\n}\n\ninterface HotCallBack {\n  deps: string[]\n  fn: (modules: object[]) => void\n}\n\n// 热更新模块\nconst hotModulesMap = new Map<string, HotModule>()\n// 不再生效的模块表\nconst prunesMap = new Map<string, (data: any) => void | Promise<void>>()\n\nexport const createHotContext = (ownerPath: string) => {\n  const mod = hotModulesMap.get(ownerPath)\n  if (mod) {\n    mod.callbacks = []\n  }\n  const acceptDeps = (deps: string[], callback: any) => {\n    const mod: HotModule = hotModulesMap.get(ownerPath) || {\n      id: ownerPath,\n      callbacks: []\n    }\n    mod.callbacks.push({\n      deps,\n      fn: callback\n    })\n    hotModulesMap.set(ownerPath, mod)\n  }\n  return {\n    accept(deps: any, callbacks?: any) {\n      // 接受自身更新\n      if (typeof deps === 'function' || !deps) {\n        acceptDeps([ownerPath], ([mod]) => deps && deps(mod))\n      }\n    },\n    prune(cb: (data: any) => void) {\n      prunesMap.set(ownerPath, cb)\n    }\n  }\n}\n\nasync function fetchModuleData({ path, timestamp }: Update) {\n  const mod = hotModulesMap.get(path)\n  if (!mod) {\n    return\n  }\n  // 模块内容表\n  const moduleMap = new Map()\n  // 模块路径表\n  const moduleUpdatePathMap = new Set<string>()\n  moduleUpdatePathMap.add(path)\n\n  await Promise.all(\n    Array.from(moduleUpdatePathMap).map(async (dep) => {\n      const [path, query] = dep.split('?')\n      try {\n        const newMod = await import(\n          path + `?t=${timestamp}${query ? `&${query}` : ''}`\n        )\n        moduleMap.set(dep, newMod)\n      } catch {}\n    })\n  )\n  return () => {\n    for (const { deps, fn } of mod.callbacks) {\n      fn(deps.map((dep) => moduleMap.get(dep)))\n    }\n    console.log(`[vite] hot updated: ${path}`)\n  }\n}\n\n// css 热更新\nconst sheetsMap = new Map()\nexport function updateStyle(id: string, content: string) {\n  let style = sheetsMap.get(id);\n  if (!style) {\n    style = document.createElement(\"style\");\n    style.setAttribute(\"type\", \"text/css\");\n    style.innerHTML = content;\n    document.head.appendChild(style);\n  } else {\n    style.innerHTML = content;\n  }\n  sheetsMap.set(id, style);\n}\n\nexport function removeStyle(id: string): void {\n  const style = sheetsMap.get(id);\n  if (style) {\n    document.head.removeChild(style);\n  }\n  sheetsMap.delete(id);\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,QAAQ,IAAI,2BAA2B;AAGvC,IAAM,SAAS,IAAI,UAAU,+BAA+B,UAAU;AAGtE,OAAO,iBAAiB,WAAW,OAAO,EAAE,KAAK,MAAM;AACrD,gBAAc,KAAK,MAAM,IAAW,CAAC;AACvC,CAAC;AAGD,SAAS,cAAc,SAAc;AACnC,UAAQ,QAAQ;AAAA,SACT;AACH,cAAQ,IAAI,qBAAqB;AACjC,kBAAY,MAAM,OAAO,KAAK,MAAM,GAAG,GAAI;AAE3C;AAAA,SACG;AACH,cAAQ,QAAQ,QAAQ,CAAC,WAAmB;AAC1C,YAAI,OAAO,SAAS,aAAa;AAC/B,0BAAgB,MAAM;AAAA,QACxB;AAAA,MACF,CAAC;AACD;AAAA;AAEN;AAaA,IAAM,gBAAgB,oBAAI,IAAuB;AAEjD,IAAM,YAAY,oBAAI,IAAiD;AAEhE,IAAM,mBAAmB,CAAC,cAAsB;AACrD,QAAM,MAAM,cAAc,IAAI,SAAS;AACvC,MAAI,KAAK;AACP,QAAI,YAAY,CAAC;AAAA,EACnB;AACA,QAAM,aAAa,CAAC,MAAgB,aAAkB;AACpD,UAAMA,OAAiB,cAAc,IAAI,SAAS,KAAK;AAAA,MACrD,IAAI;AAAA,MACJ,WAAW,CAAC;AAAA,IACd;AACA,IAAAA,KAAI,UAAU,KAAK;AAAA,MACjB;AAAA,MACA,IAAI;AAAA,IACN,CAAC;AACD,kBAAc,IAAI,WAAWA,IAAG;AAAA,EAClC;AACA,SAAO;AAAA,IACL,OAAO,MAAW,WAAiB;AAEjC,UAAI,OAAO,SAAS,cAAc,CAAC,MAAM;AACvC,mBAAW,CAAC,SAAS,GAAG,CAAC,CAACA,IAAG,MAAM,QAAQ,KAAKA,IAAG,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,IACA,MAAM,IAAyB;AAC7B,gBAAU,IAAI,WAAW,EAAE;AAAA,IAC7B;AAAA,EACF;AACF;AAEA,eAAe,gBAAgB,EAAE,MAAM,UAAU,GAAW;AAC1D,QAAM,MAAM,cAAc,IAAI,IAAI;AAClC,MAAI,CAAC,KAAK;AACR;AAAA,EACF;AAEA,QAAM,YAAY,oBAAI,IAAI;AAE1B,QAAM,sBAAsB,oBAAI,IAAY;AAC5C,sBAAoB,IAAI,IAAI;AAE5B,QAAM,QAAQ;AAAA,IACZ,MAAM,KAAK,mBAAmB,EAAE,IAAI,OAAO,QAAQ;AACjD,YAAM,CAACC,OAAM,KAAK,IAAI,IAAI,MAAM,GAAG;AACnC,UAAI;AACF,cAAM,SAAS,MAAM,OACnBA,QAAO,MAAM,YAAY,QAAQ,IAAI,UAAU;AAEjD,kBAAU,IAAI,KAAK,MAAM;AAAA,MAC3B,QAAE;AAAA,MAAO;AAAA,IACX,CAAC;AAAA,EACH;AACA,SAAO,MAAM;AACX,eAAW,EAAE,MAAM,GAAG,KAAK,IAAI,WAAW;AACxC,SAAG,KAAK,IAAI,CAAC,QAAQ,UAAU,IAAI,GAAG,CAAC,CAAC;AAAA,IAC1C;AACA,YAAQ,IAAI,uBAAuB,MAAM;AAAA,EAC3C;AACF;AAGA,IAAM,YAAY,oBAAI,IAAI;AACnB,SAAS,YAAY,IAAY,SAAiB;AACvD,MAAI,QAAQ,UAAU,IAAI,EAAE;AAC5B,MAAI,CAAC,OAAO;AACV,YAAQ,SAAS,cAAc,OAAO;AACtC,UAAM,aAAa,QAAQ,UAAU;AACrC,UAAM,YAAY;AAClB,aAAS,KAAK,YAAY,KAAK;AAAA,EACjC,OAAO;AACL,UAAM,YAAY;AAAA,EACpB;AACA,YAAU,IAAI,IAAI,KAAK;AACzB;AAEO,SAAS,YAAY,IAAkB;AAC5C,QAAM,QAAQ,UAAU,IAAI,EAAE;AAC9B,MAAI,OAAO;AACT,aAAS,KAAK,YAAY,KAAK;AAAA,EACjC;AACA,YAAU,OAAO,EAAE;AACrB;","names":["mod","path"]}